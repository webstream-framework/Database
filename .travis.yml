sudo: required

services:
  - docker

language: php

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

matrix:
  fast_finish: true
  include:
    - php: 7.1
      env: VERSION=latest
    - php: 7.0
      env: VERSION=7.0

before_script:
  - echo "memory_limit=-1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  - composer install
  - mkdir -p build/logs
  - docker run --name test-mysql -p 13307:3307 -e MYSQL_DATABASE=sandbox -e MYSQL_USER=mysql -e MYSQL_PASSWORD=mysql -e MYSQL_ROOT_PASSWORD=root -d webstream/mysql
  - docker run --name test-postgres -p 15432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -d webstream/postgres
  - docker create --name test-sqlite -v /tmp webstream/sqlite

script:
  - if [[ $VERSION = 'latest' ]]; then docker run --volumes-from test-sqlite -v /home/travis/build/webstream-framework/Database:/workspace/ --rm --link test-mysql:mysql --link test-postgres:postgres webstream/php-cli phpdbg -qrr vendor/bin/phpunit --configuration phpunit.xml --coverage-clover=coverage.clover; fi
  - if [[ $VERSION != 'latest' ]]; then docker run --volumes-from test-sqlite -v /home/travis/build/webstream-framework/Database:/workspace/ --rm --link test-mysql:mysql --link test-postgres:postgres webstream/php-cli vendor/bin/phpunit --configuration phpunit.xml; fi

after_script:
  - docker rm -f test-mysql
  - docker rm -f test-postgres
  - docker rm -f test-sqlite
  - if [[ $VERSION = 'latest' ]]; then wget https://scrutinizer-ci.com/ocular.phar; fi
  - if [[ $VERSION = 'latest' ]]; then php ocular.phar code-coverage:upload --format=php-clover coverage.clover; fi
